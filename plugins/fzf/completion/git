#!/usr/bin/env bash


args=($(printf "%s\n" $@))
cmd=${args[1]}

# ==============================================================================
# LIST ALL COMMANDS
# ==============================================================================
if [[ -z $cmd ]]; then
	result=($({
		printf "%s\n" $(git help --all | grep '^ \+\w')
		git config --list | sed -n 's/^alias\.\([^=]\+\)=\(.*\)/\1 (alias for \2)/p'
	} | my-fzf-40))
	ret=$?
	[[ $ret -ne 0 ]] && exit $ret
	echo $@ ${result[0]}
	exit 0
fi


# ==============================================================================
# SPECIFIC COMMANDS
# ==============================================================================
git_top=$(git rev-parse --show-toplevel)
git_relative=$(python -c "import os.path; print os.path.relpath('$git_top', '$PWD')")

if [[ $cmd == 'add' ]]; then
	result=$({
		git ls-files --modified
		git ls-files --modified $git_relative
		git ls-files --exclude-standard --others
		git ls-files --exclude-standard --others $git_relative
	} | my-fzf-git-diff)
	ret=$?

elif [[ $cmd == 'diff' ]]; then
	result=$(git ls-files --modified | my-fzf-40)
	ret=$?

else
	result=$({
		my-fzf-helper-files-shallow-first
	} | my-fzf-40)
	ret=$?
fi

# Return result
[[ $ret -ne 0 ]] && exit $ret
echo $@ $result

