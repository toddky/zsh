#!/usr/bin/env bash

args=($(printf "%s\n" $@))
args[0]=module
cmd=${args[1]}
[[ "$@" == "${@% }" ]] && query=${args[${#args[@]}-1]}

# ==============================================================================
# FZF
# ==============================================================================
modulecmd='/arm/tools/tct/tcl/8.5.2/rhe6-x86_64/bin/tclsh /arm/tools/setup/lib/modulecmd.tcl bash'
function fzf-module-show() {
	fzf --height 80% --reverse --tiebreak=index --preview-window=right:60% --preview="$modulecmd show {1}" $@
}

# ==============================================================================
# LIST ALL COMMANDS
# ==============================================================================
function module-commands() {
	echo -e "list\nload\nunload"
}

# Check if command empty
if [[ -z $cmd ]]; then
	result=($(module-commands | my-fzf-40))
	ret=$?

# Check for command tab complete
elif [[ -z ${args[2]} && -n $query ]]; then
	result=($(module-commands | my-fzf-40 $cmd))
	ret=$?
fi

# Return results (if available)
if [[ -n $ret ]]; then
	[[ $ret -ne 0 ]] && exit $ret
	echo "module ${result[0]} "
	exit 0
fi


# ==============================================================================
# SPECIFIC COMMANDS
# ==============================================================================

if [[ $cmd =~ unload ]]; then
	result=($({
		eval $modulecmd list |& awk '/\// {print $2}'
	} | fzf-module-show))
	ret=$?
	args+=(${result[0]})

elif [[ $cmd =~ show ]]; then
	result=($({
		eval $modulecmd list |& awk '/\// {print $2}'
		/arm/tools/setup/bin/mgrep 2>/dev/null
	} | fzf-module-show))
	ret=$?
	args+=(${result[0]})

elif [[ $cmd =~ load ]]; then
	result=($({
		/arm/tools/setup/bin/mgrep 2>/dev/null
	} | fzf-module-show --tac))
	ret=$?
	args+=(${result[0]})
fi

# Return result
[[ $ret -ne 0 ]] && exit $ret
echo "${args[@]} "

